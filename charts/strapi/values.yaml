# Default values for strapi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  # image name overrides repository and tag.
  imageName: ""
  repository: ghcr.io/strapi/
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

dashboardDomain: "dashboard.domain.com"

# change this secret
adminJWTSecret: $XX2UnMcN6%%b@CkFof*


imagePullSecrets:
  - name: github
nameOverride: ""
fullnameOverride: ""

# enable the cronjob to create DB backups to S3. You can specify how many DB dumps should be kept.
postgresBackup:
  enabled: false
  historyLimit: 5
  schedule: 0 */8 * * *
  bucketName: postgres-backup

postgresql:
  enabled: false
  metrics:
    enabled: false
  postgresqlDatabase: strapi
  postgresqlUsername: strapi
  postgresqlPassword: DhzYU4sMDaSqMnAhd33499vo49t9
  tls:
    enabled: true
    autoGenerated: true
  volumePermissions:
    enabled: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

# the full backend URL of strapi  
strapiApiUrl: https://strapi.example.com
ingress:
  enabled: true
  className: ""
  host: chart-example.local
  pathType: ImplementationSpecific       
  tls:
    enabled: true
    secretName: strapi-tls-secret
  annotations: 
    cert-manager.io/acme-challenge-type: http01
    cert-manager.io/cluster-issuer: letsencrypt-prod

# S3 storage options. Settings need to be set, as containers are volatile    
s3:
  enabled: true
  accesKeyId: ""
  accessSecret: ""
  endpoint: "s3.us-east-2.amazonaws.com"
  bucket: "strapi"

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
  requests:
    cpu: 150m
    memory: 100Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Just add here secrets, that you want to get mounted
additionalSecretMounts: {}

# Add env variables with key and value, that should be added to the strapi container
additionalEnvVariables:
  TESTKEY: value

# You can set a database URL here if you don't want to use the included DB
secrets: 
  databaseUrl: "postgresql://{{ .Release.Name }}-postgresql"
  
